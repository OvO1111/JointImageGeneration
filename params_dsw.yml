output_path: "/mnt/data/smart_health_02/dailinrui/data/pretrained/ccdm/"
exp_name: local_test

cudnn:
    benchmark: yes
    enabled: yes

dataset_file: datasets.ruijin

dataset_pipeline_train: ["flip",  "resize", "colorjitter", "torchvision_normalise"]
dataset_pipeline_train_settings:
    target_size:  [512, 512]

dataset_pipeline_val: ["resize", "torchvision_normalise"]
dataset_pipeline_val_settings:
    target_size: [512, 512]

dataset_val_max_size: 100  # One of "null" (=full val size), or any number
class_weights: "uniform"

multigpu: no
distributed: no
mp_loaders: 4
batch_size: 1
samples: 12 # For GED calculation
max_epochs: 2000
dims: 3

optim:
    name: "AdamW"
    learning_rate: 1.0e-4
    lr_function: "polynomial"
    lr_params:
        power: 1.0     # setting to 1.0 means linear decay
        min_lr: 1.0e-6 # learning rate value for the final step of training
    epochs: 1000 # total number of epochs to train for if missing then trains for max_epochs (for step > epochs lr = min_lr)

polyak_alpha: 0.9999
beta_schedule: "cosine" # One of ["cosine", "linear"]
beta_schedule_params:
    s: 0.008

backbone: "unet_openai"

diffusion_type: "categorical"
time_steps: 1000

feature_cond_encoder:
    type: 'selfattn' # ['dino', 'none']
    embed_dim: 768 # 768 for vitb, 384 for vits
    n_heads: 8
    model_depth: 4
    d_head: 64
    dropout: 0.2
    train: yes

validation_freq: 1
display_freq: 100
save_freq: 1000
n_validation_predictions: 1
n_validation_images: null
train_vis_freq: 200

wandb: no 
wandb_mode: 'offline'  # ['online', 'offline']
wandb_project: ccdm


unet_openai:
    base_channels: 64  # 64
    channel_mult: [1, 2, 2, 4, 5]  # [1, 2, 3.5, 4, 5]
    attention_resolutions: [32, 16, 8]
    num_heads: 1  # Ignored if num_head_channels is not -1
    num_head_channels: 32  # If not -1, num_heads is automatically set to channels//num_head_channels
    softmax_output: yes # this is the default for build_model

load_from: null

